# Generated by Django 4.0.1 on 2022-01-20 16:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import slugger.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ingredient', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IngredientAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='ingredient amount')),
                ('ingredient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ingredient_amounts', to='ingredient.ingredient', verbose_name='ingredient')),
            ],
            options={
                'verbose_name': 'Ingredient amount',
                'verbose_name_plural': 'Ingredient amounts',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(help_text='Введите название для тега', unique=True, verbose_name='Название тега')),
                ('color', models.CharField(help_text='Введите цвет для тега', max_length=16, unique=True, verbose_name='Цвет тега')),
                ('slug', slugger.fields.AutoSlugField(editable=False, help_text='Введите URL-адрес для тега', populate_from='name', unique=True, verbose_name='URL-адрес тега')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(help_text='Введите название для публикации', verbose_name='Название рецепта')),
                ('image', models.ImageField(blank=True, help_text='Выбрать файл', null=True, upload_to='recipe/', verbose_name='Изображение')),
                ('text', models.TextField(help_text='Введите текст публикации', verbose_name='Описание рецепта')),
                ('cooking_time', models.PositiveSmallIntegerField(help_text='Введите время приготовления блюда', verbose_name='Время приготовления')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='created date')),
                ('author', models.ForeignKey(help_text='Выберите автора', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipe', to=settings.AUTH_USER_MODEL, verbose_name='Автор публикации')),
                ('ingredients', models.ManyToManyField(related_name='recipe', through='recipe.IngredientAmount', to='ingredient.Ingredient', verbose_name='ingredients')),
                ('tags', models.ManyToManyField(help_text='Выберите тег', related_name='recipe', to='recipe.Tag', verbose_name='Тег')),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ['-created_date'],
            },
        ),
        migrations.AddField(
            model_name='ingredientamount',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_amounts', to='recipe.recipe', verbose_name='recipe'),
        ),
        migrations.CreateModel(
            name='FavouriteRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_in_shopping_cart', models.BooleanField(default=False, verbose_name='is in shopping cart')),
                ('is_favorited', models.BooleanField(default=False, verbose_name='is in favorites')),
                ('added_to_favorites', models.DateTimeField(auto_now_add=True, verbose_name='added at')),
                ('added_to_shopping_cart', models.DateTimeField(auto_now_add=True, verbose_name='added at')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_favourites', to='recipe.recipe', verbose_name='recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourite_recipes', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Favorites',
                'verbose_name_plural': 'Favorites',
                'ordering': ['-added_to_favorites', '-added_to_shopping_cart'],
            },
        ),
        migrations.AddConstraint(
            model_name='recipe',
            constraint=models.UniqueConstraint(fields=('author', 'name'), name='unique_recipe_author'),
        ),
        migrations.AddConstraint(
            model_name='ingredientamount',
            constraint=models.UniqueConstraint(fields=('recipe', 'ingredient'), name='unique_recipe_ingredient'),
        ),
        migrations.AddConstraint(
            model_name='favouriterecipe',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_favorite_recipe'),
        ),
    ]
